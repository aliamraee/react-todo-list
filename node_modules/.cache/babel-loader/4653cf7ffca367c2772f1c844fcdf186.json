{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\To-Do list\\\\src\\\\components\\\\TaskForm.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { TaskListContext } from \"./../context/TaskListContext\";\n\nconst TaskForm = () => {\n  const [title, setTitle] = useState(\"\");\n  const {\n    tasks,\n    setTasks,\n    editItem,\n    editTask\n  } = useContext(TaskListContext);\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const addTask = title => {\n    setTasks([...tasks, {\n      title: title,\n      id: title\n    }]);\n    setTitle('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!editItem) {\n      addTask(title);\n      setTitle(\"\");\n    } else {\n      editTask(title, editItem.id);\n    }\n  };\n\n  const clearList = () => {\n    setTasks([]);\n    setTitle('');\n  };\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n      console.log(editItem);\n    } else {\n      setTitle(\"\");\n    }\n  }, [editItem]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"task-input\",\n    placeholder: \"Add Task...\",\n    value: title,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"add-task-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, editItem ? 'Edit Task' : 'Add Task'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: clearList,\n    className: \"clear-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\n\nexport default TaskForm;","map":{"version":3,"sources":["D:/project/To-Do list/src/components/TaskForm.js"],"names":["React","useContext","useState","useEffect","TaskListContext","TaskForm","title","setTitle","tasks","setTasks","editItem","editTask","handleChange","e","target","value","addTask","id","handleSubmit","preventDefault","clearList","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,eAAT,QAAgC,8BAAhC;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAA0CV,UAAU,CAACG,eAAD,CAA1D;;AAIA,QAAMQ,YAAY,GAAGC,CAAC,IAAI;AACtBN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAGA,QAAMC,OAAO,GAAIV,KAAD,IAAW;AACvBG,IAAAA,QAAQ,CAAC,CACL,GAAGD,KADE,EACK;AAAEF,MAAAA,KAAK,EAAEA,KAAT;AAAgBW,MAAAA,EAAE,EAAEX;AAApB,KADL,CAAD,CAAR;AAGAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,GAND;;AAOA,QAAMW,YAAY,GAAGL,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAI,CAACT,QAAL,EAAe;AACXM,MAAAA,OAAO,CAACV,KAAD,CAAP;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHI,MAAAA,QAAQ,CAACL,KAAD,EAAQI,QAAQ,CAACO,EAAjB,CAAR;AACH;AACJ,GARD;;AASA,QAAMG,SAAS,GAAG,MAAM;AACpBX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAHD;;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,QAAJ,EAAc;AACVH,MAAAA,QAAQ,CAACG,QAAQ,CAACJ,KAAV,CAAR;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AAEH,KAJD,MAIO;AACHH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GARQ,EAQN,CAACG,QAAD,CARM,CAAT;AAUA,sBACI;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAA8B,IAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,WAAW,EAAC,aAHhB;AAII,IAAA,KAAK,EAAEZ,KAJX;AAKI,IAAA,QAAQ,EAAEM,YALd;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,GAAG,WAAH,GAAiB,UAD9B,CADJ,eAII;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEU,SAA/B;AAA0C,IAAA,SAAS,EAAC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CATJ,CADJ;AAkBH,CA1DD;;AA4DA,eAAef,QAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { TaskListContext } from \"./../context/TaskListContext\"\r\n\r\n\r\nconst TaskForm = () => {\r\n    const [title, setTitle] = useState(\"\")\r\n    const { tasks, setTasks, editItem, editTask } = useContext(TaskListContext);\r\n\r\n\r\n\r\n    const handleChange = e => {\r\n        setTitle(e.target.value)\r\n    }\r\n    const addTask = (title) => {\r\n        setTasks([\r\n            ...tasks, { title: title, id: title }\r\n        ])\r\n        setTitle('')\r\n\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (!editItem) {\r\n            addTask(title)\r\n            setTitle(\"\")\r\n        } else {\r\n            editTask(title, editItem.id)\r\n        }\r\n    }\r\n    const clearList = () => {\r\n        setTasks([])\r\n        setTitle('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (editItem) {\r\n            setTitle(editItem.title)\r\n            console.log(editItem);\r\n\r\n        } else {\r\n            setTitle(\"\")\r\n        }\r\n    }, [editItem])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"task-input\"\r\n                placeholder=\"Add Task...\"\r\n                value={title}\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            <div className=\"buttons\">\r\n                <button type=\"submit\" className=\"add-task-btn\">\r\n                    {editItem ? 'Edit Task' : 'Add Task'}\r\n                </button>\r\n                <button type=\"button\" onClick={clearList} className=\"clear-btn\">Clear</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TaskForm;\r\n"]},"metadata":{},"sourceType":"module"}